(require string => str)

(define (ascii-char-to-byte chr)
  (cond
    ((str:string=? chr "\t")   9)
    ((str:string=? chr "\n")  10)
    ((str:string=? chr " ")  32)
    ((str:string=? chr "!")  33)
    ((str:string=? chr "\"")  34)
    ((str:string=? chr "#")  35)
    ((str:string=? chr "$")  36)
    ((str:string=? chr "%")  37)
    ((str:string=? chr "&")  38)
    ((str:string=? chr "'")  39)
    ((str:string=? chr "(")  40)
    ((str:string=? chr ")")  41)
    ((str:string=? chr "*")  42)
    ((str:string=? chr "+")  43)
    ((str:string=? chr ",")  44)
    ((str:string=? chr "-")  45)
    ((str:string=? chr ".")  46)
    ((str:string=? chr "/")  47)
    ((str:string=? chr "0")  48)
    ((str:string=? chr "1")  49)
    ((str:string=? chr "2")  50)
    ((str:string=? chr "3")  51)
    ((str:string=? chr "4")  52)
    ((str:string=? chr "5")  53)
    ((str:string=? chr "6")  54)
    ((str:string=? chr "7")  55)
    ((str:string=? chr "8")  56)
    ((str:string=? chr "9")  57)
    ((str:string=? chr ":")  58)
    ((str:string=? chr ";")  59)
    ((str:string=? chr "<")  60)
    ((str:string=? chr "=")  61)
    ((str:string=? chr ">")  62)
    ((str:string=? chr "?")  63)
    ((str:string=? chr "@")  64)
    ((str:string=? chr "A")  65)
    ((str:string=? chr "B")  66)
    ((str:string=? chr "C")  67)
    ((str:string=? chr "D")  68)
    ((str:string=? chr "E")  69)
    ((str:string=? chr "F")  70)
    ((str:string=? chr "G")  71)
    ((str:string=? chr "H")  72)
    ((str:string=? chr "I")  73)
    ((str:string=? chr "J")  74)
    ((str:string=? chr "K")  75)
    ((str:string=? chr "L")  76)
    ((str:string=? chr "M")  77)
    ((str:string=? chr "N")  78)
    ((str:string=? chr "O")  79)
    ((str:string=? chr "P")  80)
    ((str:string=? chr "Q")  81)
    ((str:string=? chr "R")  82)
    ((str:string=? chr "S")  83)
    ((str:string=? chr "T")  84)
    ((str:string=? chr "U")  85)
    ((str:string=? chr "V")  86)
    ((str:string=? chr "W")  87)
    ((str:string=? chr "X")  88)
    ((str:string=? chr "Y")  89)
    ((str:string=? chr "Z")  90)
    ((str:string=? chr "[")  91)
    ((str:string=? chr "\\")  92)
    ((str:string=? chr "]")  93)
    ((str:string=? chr "^")  94)
    ((str:string=? chr "_")  95)
    ((str:string=? chr "`")  96)
    ((str:string=? chr "a")  97)
    ((str:string=? chr "b")  98)
    ((str:string=? chr "c")  99)
    ((str:string=? chr "d") 100)
    ((str:string=? chr "e") 101)
    ((str:string=? chr "f") 102)
    ((str:string=? chr "g") 103)
    ((str:string=? chr "h") 104)
    ((str:string=? chr "i") 105)
    ((str:string=? chr "j") 106)
    ((str:string=? chr "k") 107)
    ((str:string=? chr "l") 108)
    ((str:string=? chr "m") 109)
    ((str:string=? chr "n") 110)
    ((str:string=? chr "o") 111)
    ((str:string=? chr "p") 112)
    ((str:string=? chr "q") 113)
    ((str:string=? chr "r") 114)
    ((str:string=? chr "s") 115)
    ((str:string=? chr "t") 116)
    ((str:string=? chr "u") 117)
    ((str:string=? chr "v") 118)
    ((str:string=? chr "w") 119)
    ((str:string=? chr "x") 120)
    ((str:string=? chr "y") 121)
    ((str:string=? chr "z") 122)
    ((str:string=? chr "{") 123)
    ((str:string=? chr "|") 124)
    ((str:string=? chr "}") 125)
    ((str:string=? chr "~") 126)
    (else (error-and-exit "Cannot convert ASCII character to byte: " chr)) ))

;; Converts a string into a list of integers representing the bytes that make up
;; the string. It is assumed the string consists only of printable ASCII
;; characters.
;;
;; Includes the NULL terminator at the end.
(define (ascii-string-to-bytes str)
  (if (str:null? str)
    '(0x00)
    (cons
      (ascii-char-to-byte (str:at str 0))
      (ascii-string-to-bytes (str:string-tail str 1))) ))

(module-export
  ascii-string-to-bytes)
